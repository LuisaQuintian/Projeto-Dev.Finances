
/* Global -----------------*/
:root {
    --dark-blue: #363f5f;
    --green: #49aa26;
    --light-green: #3dd705;
    --red: #e92929;
}


* {
   margin: 0;
   padding: 0;
   box-sizing: border-box;
}

html {
    font-size: 93.75%; /*esse valor é igual a 15px! Já que 100% é 16px*/
}

h2 {
    margin-top: 3.2rem;
    margin-bottom: 0.8rem;
    color: var(--dark-blue);
    font-weight: 400;
}

body {
    background-color: #f0f2f5;
    font-family: 'Poppins';
}

/*sr-only = screen reader only, não da pra usar direto a propriedade "display:none;" pq isso iria fazer o elemento sumir da tela, e ele ia deixar de ser lido pelo screen reader*/
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.container {
    margin: auto;
    width: min(90vw, 800px);
}

/* Links ands Buttons ----*/
a {
    color: var(--green);
    text-decoration: none;
}

a:hover {
    color: var(--light-green);
}

button {
    width: 100%;
    height: 50px;
    border: none;
    color: white;
    background-color: var(--green);
    border-radius: 0.25rem;
    cursor: pointer; /*muda o tipo do cursor!*/
}

button:hover {
    background-color: var(--light-green);
}

.button.new {
    display: inline-block; /*no inline n funciona a propriedade margin, e no block o link fica conprido e estrenho. Usando esse valor, o link fica com as pripriedades no inline*/
    margin-bottom: 0.8rem;
}

.button.cancel {
    color: var(--red);
    border: 2px var(--red) solid;
    border-radius: 0.25rem;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.6;
}

.button.cancel:hover {
    opacity: 1;
}

/* Header -----------------*/
header {
     background-color: #2D4A22;
     padding: 2rem 0 10rem;
     text-align: center;
}

header h1 {
    color: #fff;
    font-weight: 100;
}

/* Balance -----------------*/
#balance {
    margin-top: -8rem;

}

#balance h2 {
    color: white;
    margin-top: 0;
}

/* Cards -----------------*/
.card {
    background-color: white;
    padding: 1.5rem 2rem;
    border-radius: 0.25rem;
    margin-bottom: 2rem;
    color: var(--dark-blue);
}

.card h3 {
    font-weight: 400;
    font-size: 1rem;
    display: flex; /*mantem um elemento ao lado do outro*/
    align-items: center;
    justify-content: space-between;
}

.card p {
    font-size: 2rem;
    line-height: 3rem;
    margin-top: 1rem;
}

.card.total {
    background-color: var(--green);
    color: white;
}

/* Table -----------------*/
#transaction {
    display: block;
    width: 100%;
    
    overflow-x: auto; /*Essa propriedade significa que, se for necessário, ele cria automaticamente uma rolagem para o lado (eixo-x!). Isso é muito bom para progrmar para mobile!*/
}

#data-table {
    width: 100%;
    border-spacing: 0 0.5rem;
    color: #969cb3;

}

table thead tr th:first-child,
table tbody tr td:first-child {
    border-radius: 0.25rem 0 0 0.25rem
}

table tbody tr td:last-child,
table tbody tr td:last-child {
    border-radius: 0 0.25rem 0.25rem 0
}

table tbody tr {
    opacity: 0.7;
}

table tbody tr:hover {
    opacity: 1;
}

table thead th {
    background-color: white;
    font-weight: 400;
    text-align: left;
    padding: 1rem 2rem;
}

table tbody td {
    background-color: white;
    padding: 1rem 2rem;
  
}

td.description {
    color: var(--dark-blue);
}

td.income {
    color: #12a454;
}

td.expense {
    color: #e92929;
}

/* Modal -----------------*/
.modal-overlay{
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.7);
    position: fixed;
    top: 0;

    display:flex;
    align-items: center;
    justify-content: center;

    opacity: 0;
    visibility: hidden;

    z-index: 999;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.modal {
    background-color: #f0f2f5;
    padding: 2.4rem;

    position: relative;
    z-index: 1;
}

/* Form -----------------*/
#form {
    max-width: 500px;
}

#form h2 {
    margin-top: 0;
}

input {
    border: none;
    border-radius: 0.2rem;
    padding: 0.8rem;
    width: 100%;
}

.input-group {
    margin-top: 0.8rem;
}

.input-group .help{
    opacity: 0.4;
}

.input-group.actions {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.input-group.actions .button,
.input-group.actions button {
    width: 48%;
}

/* Footer -----------------*/
footer {
    text-align: center;
    padding: 4rem 0 2rem;
    color: var(--dark-blue);
    opacity: 0.6;
}

/* Responsive -----------------*/
/*@:at gera as at rules:*/
@media (min-width: 800px) {
    html {
        font-size: 87.5%; /*igual a 14px*/
    }
    
    #balance {
        display: grid; /*permite mexer os elementos na vertical ou na horizontal!*/
        grid-template-columns: repeat(3, 1fr); /*o repeat() é uma função para repetir valores, o primeiro item é o numero de repetições e o segundo item é o valor*/
        /*a fr(fração) é uma unidade de medida bem especifica dessa propriedade, equivale a uma porção, e foram colocadas três vezes pq quero separar entre três colunas*/
        gap: 2rem; /*espaço entre as colunas do grid*/

    }
}